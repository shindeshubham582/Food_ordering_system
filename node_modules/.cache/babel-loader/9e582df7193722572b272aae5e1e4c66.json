{"ast":null,"code":"var _jsxFileName = \"/Users/shubhams/Documents/Work/temp/React/Food Ordering system/src/Component/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport React, { useContext, useState } from \"react\";\nimport CartContext from \"../../store/CartContext\";\nimport CartItem from \"./CartItem/CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const onSubmitHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch(\"https://react-http-a44c2-default-rtdb.firebaseio.com/oderes.json\", {\n      method: \"post\",\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items,\n        totalPrice: cartCtx.totalAmount.toFixed(2)\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.clearCartHandler();\n  };\n\n  const totalAmmount = `â‚¹ ${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n\n  const modalAction = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.hideCartHandler,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", totalAmmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onCancel: props.hideCartHandler,\n      onConfirm: onSubmitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), !isCheckout && modalAction]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        onClick: props.hideCartHandler,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 36\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClick: props.hideCartHandler,\n    children: [!isSubmitting && !didSubmit && cartModalContent, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Cart, \"mkyP1T14krwt2zz5rXlJIrG6NCM=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/shubhams/Documents/Work/temp/React/Food Ordering system/src/Component/Cart/Cart.js"],"names":["Modal","classes","React","useContext","useState","CartContext","CartItem","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","cartCtx","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","onSubmitHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","items","totalPrice","totalAmount","toFixed","clearCartHandler","totalAmmount","hasItems","length","cartItems","map","name","price","bind","modalAction","actions","hideCartHandler","button","cartModalContent","total","didSubmitModalContent","isSubmittingModalContent"],"mappings":"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","sourcesContent":["import Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport React, { useContext, useState } from \"react\";\nimport CartContext from \"../../store/CartContext\";\nimport CartItem from \"./CartItem/CartItem\";\nimport Checkout from \"./Checkout\";\n\nconst Cart = (props) => {\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem({ ...item, amount: 1 });\n  };\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const onSubmitHandler = async (userData) => {\n    setIsSubmitting(true);\n    await fetch(\n      \"https://react-http-a44c2-default-rtdb.firebaseio.com/oderes.json\",\n      {\n        method: \"post\",\n        body: JSON.stringify({\n          user: userData,\n          orderedItems: cartCtx.items,\n          totalPrice: cartCtx.totalAmount.toFixed(2),\n        }),\n      }\n    );\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.clearCartHandler()\n  };\n\n  const totalAmmount = `â‚¹ ${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n  const modalAction = (\n    <div className={classes.actions}>\n      <button\n        className={classes[\"button--alt\"]}\n        onClick={props.hideCartHandler}\n      >\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={orderHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n\n  const cartModalContent = (\n    <React.Fragment>\n      {cartItems}\n      <div className={classes.total}>\n        <span> Total Amount</span>\n        <span> {totalAmmount}</span>\n      </div>\n      {isCheckout && (\n        <Checkout\n          onCancel={props.hideCartHandler}\n          onConfirm={onSubmitHandler}\n        />\n      )}\n      {!isCheckout && modalAction}\n    </React.Fragment>\n  );\n\n  const didSubmitModalContent = (\n    <React.Fragment>\n      <p>Successfully sent the order!</p>\n      <div className={classes.actions}>\n      <button className={classes.button} onClick={props.hideCartHandler}>\n        Close\n      </button>\n    </div>\n    </React.Fragment>\n  );\n\n  const isSubmittingModalContent = <p>Sending order data...</p>;\n\n  return <Modal onClick={props.hideCartHandler}>\n     {!isSubmitting && !didSubmit && cartModalContent}\n      {isSubmitting && isSubmittingModalContent}\n      {!isSubmitting && didSubmit && didSubmitModalContent}\n  </Modal>;\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}