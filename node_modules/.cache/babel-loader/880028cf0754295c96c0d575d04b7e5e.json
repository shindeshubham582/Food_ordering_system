{"ast":null,"code":"var _jsxFileName = \"/Users/shubhams/Documents/Work/temp/React/Food Ordering system/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./CartContext\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedAmount = state.totalAmount + action.item.price * action.item.amount;\n    console.log(updatedAmount, state.totalAmount, action.item.price, action.item.amount);\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  return defaultCart;\n};\n\nconst defaultCart = {\n  items: [],\n  totalAmount: 0\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, updateCartState] = useReducer(cartReducer, defaultCart);\n\n  const addItemToCart = item => {\n    updateCartState({\n      type: \"ADD\",\n      item\n    });\n  };\n\n  const removeItemToCart = item => {\n    updateCartState({\n      type: \"REMOVE\",\n      id: item.id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: item => {\n      addItemToCart(item);\n    },\n    removeItem: () => removeItemToCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"k2jTCbCBksHD9ExJV6MTv3hge/c=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/shubhams/Documents/Work/temp/React/Food Ordering system/src/store/CartProvider.js"],"names":["CartContext","useReducer","cartReducer","state","action","type","updatedItems","items","concat","item","updatedAmount","totalAmount","price","amount","console","log","defaultCart","CartProvider","props","cartState","updateCartState","addItemToCart","removeItemToCart","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBJ,MAAM,CAACK,IAA1B,CAArB;AACA,UAAMC,aAAa,GACjBP,KAAK,CAACQ,WAAN,GAAoBP,MAAM,CAACK,IAAP,CAAYG,KAAZ,GAAoBR,MAAM,CAACK,IAAP,CAAYI,MADtD;AAEEC,IAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ,EAA2BP,KAAK,CAACQ,WAAjC,EAA8CP,MAAM,CAACK,IAAP,CAAYG,KAA1D,EAAiER,MAAM,CAACK,IAAP,CAAYI,MAA7E;AACF,WAAO;AACLN,MAAAA,KAAK,EAAED,YADF;AAELK,MAAAA,WAAW,EAAED;AAFR,KAAP;AAID;;AACD,SAAOM,WAAP;AACD,CAZD;;AAcA,MAAMA,WAAW,GAAG;AAClBT,EAAAA,KAAK,EAAE,EADW;AAElBI,EAAAA,WAAW,EAAE;AAFK,CAApB;;AAKA,MAAMM,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BnB,UAAU,CAACC,WAAD,EAAcc,WAAd,CAA/C;;AACA,QAAMK,aAAa,GAAIZ,IAAD,IAAU;AAC9BW,IAAAA,eAAe,CAAC;AAAEf,MAAAA,IAAI,EAAE,KAAR;AAAeI,MAAAA;AAAf,KAAD,CAAf;AACD,GAFD;;AAGA,QAAMa,gBAAgB,GAAIb,IAAD,IAAU;AACjCW,IAAAA,eAAe,CAAC;AAAEf,MAAAA,IAAI,EAAE,QAAR;AAAkBkB,MAAAA,EAAE,EAAEd,IAAI,CAACc;AAA3B,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBjB,IAAAA,KAAK,EAAEY,SAAS,CAACZ,KADC;AAElBI,IAAAA,WAAW,EAAEQ,SAAS,CAACR,WAFL;AAGlBc,IAAAA,OAAO,EAAEhB,IAAI,IAAI;AACbY,MAAAA,aAAa,CAACZ,IAAD,CAAb;AACH,KALiB;AAMlBiB,IAAAA,UAAU,EAAE,MAAMJ;AANA,GAApB;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBD;;GAAMV,Y;;KAAAA,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./CartContext\";\nimport { useReducer } from \"react\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n      console.log(updatedAmount, state.totalAmount, action.item.price, action.item.amount);\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount,\n    };\n  }\n  return defaultCart;\n};\n\nconst defaultCart = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst CartProvider = (props) => {\n  const [cartState, updateCartState] = useReducer(cartReducer, defaultCart);\n  const addItemToCart = (item) => {\n    updateCartState({ type: \"ADD\", item });\n  };\n  const removeItemToCart = (item) => {\n    updateCartState({ type: \"REMOVE\", id: item.id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: item => {\n        addItemToCart(item);\n    },\n    removeItem: () => removeItemToCart,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}