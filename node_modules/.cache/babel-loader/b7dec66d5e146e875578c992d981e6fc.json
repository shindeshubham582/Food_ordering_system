{"ast":null,"code":"import _slicedToArray from\"/Users/shubhams/Documents/Work/temp/React/Food Ordering system/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from\"react\";import classes from\"./Checkout.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,postal:true,city:true}),_useState2=_slicedToArray(_useState,2),formInputValidity=_useState2[0],setFormInputValidity=_useState2[1];var nameInputRef=useRef();var streetInputRef=useRef();var postalInputRef=useRef();var cityInputRef=useRef();var isEmpty=function isEmpty(value){return value.trim().length===0;};var isSixChars=function isSixChars(value){return value.trim().length===6;};var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostal=postalInputRef.current.value;var enteredCity=cityInputRef.current.value;var enteredNameisValid=!isEmpty(enteredName);var enteredStreetisValid=!isEmpty(enteredStreet);var enteredCityisValid=!isEmpty(enteredCity);var enteredPostalisValid=isSixChars(enteredPostal);setFormInputValidity({name:enteredNameisValid,street:enteredStreetisValid,postal:enteredPostalisValid,city:enteredCityisValid});var formIsValid=enteredNameisValid&&enteredStreetisValid&&enteredCityisValid&&enteredPostalisValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,street:enteredStreet,postal:enteredPostal,city:enteredCity});};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.name?\"\":classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.street?\"\":classes.invalid);var postalControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.postal?\"\":classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.city?\"\":classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\" please Enter valid Name!!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\" please Enter valid Street!!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:postalControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalInputRef}),!formInputValidity.postal&&/*#__PURE__*/_jsx(\"p\",{children:\" please Enter valid Postal Code!!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\" please Enter valid city!!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"sources":["/Users/shubhams/Documents/Work/temp/React/Food Ordering system/src/Component/Cart/Checkout.js"],"names":["useRef","useState","classes","Checkout","props","name","street","postal","city","formInputValidity","setFormInputValidity","nameInputRef","streetInputRef","postalInputRef","cityInputRef","isEmpty","value","trim","length","isSixChars","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameisValid","enteredStreetisValid","enteredCityisValid","enteredPostalisValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","postalControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\n\nconst Checkout = (props) => {\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    postal: true,\n    city: true,\n  });\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const isEmpty = (value) => value.trim().length === 0;\n  const isSixChars = (value) => value.trim().length === 6;\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n\n    const enteredNameisValid = !isEmpty(enteredName);\n    const enteredStreetisValid = !isEmpty(enteredStreet);\n    const enteredCityisValid = !isEmpty(enteredCity);\n    const enteredPostalisValid = isSixChars(enteredPostal);\n\n    setFormInputValidity({\n      name: enteredNameisValid,\n      street: enteredStreetisValid,\n      postal: enteredPostalisValid,\n      city: enteredCityisValid,\n    });\n\n    const formIsValid =\n      enteredNameisValid &&\n      enteredStreetisValid &&\n      enteredCityisValid &&\n      enteredPostalisValid;\n\n    if (!formIsValid) {\n      return;\n    }\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postal: enteredPostal,\n      city: enteredCity,\n    });\n  };\n\n  const nameControlClasses = `${classes.control} ${\n    formInputValidity.name ? \"\" : classes.invalid\n  }`;\n  const streetControlClasses = `${classes.control} ${\n    formInputValidity.street ? \"\" : classes.invalid\n  }`;\n  const postalControlClasses = `${classes.control} ${\n    formInputValidity.postal ? \"\" : classes.invalid\n  }`;\n  const cityControlClasses = `${classes.control} ${\n    formInputValidity.city ? \"\" : classes.invalid\n  }`;\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={nameControlClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\n        {!formInputValidity.name && <p> please Enter valid Name!!</p>}\n      </div>\n      <div className={streetControlClasses}>\n        <label htmlFor=\"street\">Street</label>\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\n        {!formInputValidity.street && <p> please Enter valid Street!!</p>}\n      </div>\n      <div className={postalControlClasses}>\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input type=\"text\" id=\"postal\" ref={postalInputRef} />\n        {!formInputValidity.postal && <p> please Enter valid Postal Code!!</p>}\n      </div>\n      <div className={cityControlClasses}>\n        <label htmlFor=\"city\">City</label>\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\n        {!formInputValidity.city && <p> please Enter valid city!!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}