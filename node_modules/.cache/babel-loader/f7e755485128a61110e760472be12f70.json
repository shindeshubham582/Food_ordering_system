{"ast":null,"code":"var _jsxFileName = \"/Users/shubhams/Documents/Work/temp/React/Food Ordering system/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./CartContext\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedAmount = state.totalAmount + action.item.price * action.item.ammount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedAmount\n    };\n  }\n\n  return defaultCart;\n};\n\nconst defaultCart = {\n  items: [],\n  totalAmount: 0\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, updateCartState] = useReducer(cartReducer, defaultCart);\n\n  const addItemToCart = item => {\n    updateCartState({\n      type: \"ADD\",\n      item\n    });\n  };\n\n  const removeItemToCart = item => {\n    updateCartState({\n      type: \"REMOVE\",\n      id: item.id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: () => addItemToCart,\n    removeItem: () => removeItemToCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"k2jTCbCBksHD9ExJV6MTv3hge/c=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/shubhams/Documents/Work/temp/React/Food Ordering system/src/store/CartProvider.js"],"names":["CartContext","useReducer","cartReducer","state","action","type","updatedItems","items","concat","item","updatedAmount","totalAmount","price","ammount","defaultCart","CartProvider","props","cartState","updateCartState","addItemToCart","removeItemToCart","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAEA,MAAMC,WAAW,GAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,YAAY,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBJ,MAAM,CAACK,IAA1B,CAArB;AACA,UAAMC,aAAa,GAAGP,KAAK,CAACQ,WAAN,GAAoBP,MAAM,CAACK,IAAP,CAAYG,KAAZ,GAAoBR,MAAM,CAACK,IAAP,CAAYI,OAA1E;AACA,WAAO;AACHN,MAAAA,KAAK,EAAED,YADJ;AAEHK,MAAAA,WAAW,EAAED;AAFV,KAAP;AAIH;;AACD,SAAOI,WAAP;AACC,CAVD;;AAYA,MAAMA,WAAW,GAAG;AAChBP,EAAAA,KAAK,EAAC,EADU;AAEhBI,EAAAA,WAAW,EAAE;AAFG,CAApB;;AAKA,MAAMI,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,eAAZ,IAA+BjB,UAAU,CAACC,WAAD,EAAcY,WAAd,CAA/C;;AACA,QAAMK,aAAa,GAAGV,IAAI,IAAI;AAC5BS,IAAAA,eAAe,CAAC;AAACb,MAAAA,IAAI,EAAE,KAAP;AAAcI,MAAAA;AAAd,KAAD,CAAf;AACD,GAFD;;AAGA,QAAMW,gBAAgB,GAAGX,IAAI,IAAI;AAC/BS,IAAAA,eAAe,CAAC;AAACb,MAAAA,IAAI,EAAE,QAAP;AAAiBgB,MAAAA,EAAE,EAAEZ,IAAI,CAACY;AAA1B,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBf,IAAAA,KAAK,EAAEU,SAAS,CAACV,KADC;AAElBI,IAAAA,WAAW,EAAEM,SAAS,CAACN,WAFL;AAGlBY,IAAAA,OAAO,EAAE,MAAMJ,aAHG;AAIlBK,IAAAA,UAAU,EAAE,MAAMJ;AAJA,GAApB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApBD;;GAAMV,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./CartContext\";\nimport { useReducer } from \"react\";\n\nconst cartReducer= (state, action) =>{\nif (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedAmount = state.totalAmount + action.item.price * action.item.ammount;\n    return {\n        items: updatedItems,\n        totalAmount: updatedAmount\n    }\n}\nreturn defaultCart\n}\n\nconst defaultCart = {\n    items:[],\n    totalAmount: 0\n}\n\nconst CartProvider = (props) => {\n  const [cartState, updateCartState] = useReducer(cartReducer, defaultCart);\n  const addItemToCart = item => {\n    updateCartState({type: \"ADD\", item })\n  };\n  const removeItemToCart = item => {\n    updateCartState({type: \"REMOVE\", id: item.id })\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: () => addItemToCart,\n    removeItem: () => removeItemToCart,\n  };\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}