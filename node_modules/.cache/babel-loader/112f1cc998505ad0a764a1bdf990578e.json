{"ast":null,"code":"var _jsxFileName = \"/Users/shubhams/Documents/Work/temp/React/Food Ordering system/src/Component/Meal/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react/cjs/react.development\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, updateMeals] = useState([]);\n  const [isLoading, updateIsLoading] = useState(false);\n  const [hasError, updateHasError] = useState();\n  useEffect(() => {\n    async function fetchMeals() {\n      updateIsLoading(true);\n      const response = await fetch(\"https://react-http-a44c2-default-rtdb.firebaseio.com/meals.json\");\n\n      if (!response.ok) {\n        throw new Error('something went wrong');\n      }\n\n      const responseData = await response.json();\n      const mealsData = [];\n\n      for (const key in responseData) {\n        mealsData.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      updateMeals(mealsData);\n      updateIsLoading(false);\n    }\n\n    ;\n    fetchMeals();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  const mealList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"U79k1fMCGUBOG1Amu9AJKF/Lx6A=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/shubhams/Documents/Work/temp/React/Food Ordering system/src/Component/Meal/AvailableMeals.js"],"names":["useEffect","useState","classes","Card","MealItem","AvailableMeals","meals","updateMeals","isLoading","updateIsLoading","hasError","updateHasError","fetchMeals","response","fetch","ok","Error","responseData","json","mealsData","key","push","id","name","description","price","MealsLoading","mealList","map","meal"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,6BAApC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;;AAIA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBN,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACO,SAAD,EAAYC,eAAZ,IAA+BR,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAACS,QAAD,EAAWC,cAAX,IAA6BV,QAAQ,EAA3C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,UAAf,GAA4B;AAC1BH,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAD0B,CAA5B;;AAGA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,SAAS,GAAG,EAAlB;;AACA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC9BE,QAAAA,SAAS,CAACE,IAAV,CAAe;AACbC,UAAAA,EAAE,EAAEF,GADS;AAEbG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFX;AAGbC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHlB;AAIbC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJZ,SAAf;AAOD;;AACDlB,MAAAA,WAAW,CAACY,SAAD,CAAX;AACAV,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;;AAAA;AACDG,IAAAA,UAAU;AACX,GA1BQ,EA0BN,EA1BM,CAAT;;AA4BA,MAAIJ,SAAJ,EAAe;AACb,wBAAO;AAAS,MAAA,SAAS,EAAIN,OAAO,CAACwB,YAA9B;AAAA,6BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YAAP;AAGD;;AAED,QAAMC,QAAQ,GAAGrB,KAAK,CAACsB,GAAN,CAAWC,IAAD,iBACzB,QAAC,QAAD;AAEE,IAAA,EAAE,EAAEA,IAAI,CAACP,EAFX;AAGE,IAAA,IAAI,EAAEO,IAAI,CAACN,IAHb;AAIE,IAAA,WAAW,EAAEM,IAAI,CAACL,WAJpB;AAKE,IAAA,KAAK,EAAEK,IAAI,CAACJ;AALd,KACOI,IAAI,CAACP,EADZ;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEpB,OAAO,CAACI,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKqB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxDD;;GAAMtB,c;;KAAAA,c;AA0DN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from \"react/cjs/react.development\";\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\n\n\n\nconst AvailableMeals = () => {\n  const [meals, updateMeals] = useState([])\n  const [isLoading, updateIsLoading] = useState(false)\n  const [hasError, updateHasError] = useState()\n\n  useEffect(() => {\n    async function fetchMeals() {\n      updateIsLoading(true)\n      const response = await fetch(\n        \"https://react-http-a44c2-default-rtdb.firebaseio.com/meals.json\"\n      );\n      if (!response.ok) {\n        throw new Error('something went wrong')\n      }\n      \n      const responseData = await response.json();\n\n      const mealsData = [];\n      for (const key in responseData) {\n        mealsData.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n\n        });\n      }\n      updateMeals(mealsData)\n      updateIsLoading(false)\n    };\n    fetchMeals();\n  }, []);\n\n  if (isLoading) {\n    return <section className = {classes.MealsLoading}>\n      <p>Loading......</p>\n    </section>\n  }\n\n  const mealList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    ></MealItem>\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}